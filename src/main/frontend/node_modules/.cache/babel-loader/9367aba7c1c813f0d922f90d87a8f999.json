{"ast":null,"code":"var _jsxFileName = \"/Users/andyyuen/IdeaProjects/financetracker/src/main/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SignIn from \"./components/login/SignIn.jsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AppContext } from \"./context\";\nimport LoginContainer from \"./components/login/LoginContainer.jsx\";\nimport TopNavBar from \"./components/navigation/TopNavBar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [register, setIsRegistered] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        register,\n        setIsRegistered,\n        isLoggedIn,\n        setIsLoggedIn\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"nL6Q+JvlmFzJ6yyLc7rnkc5mBWA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SignIn","AppContext","LoginContainer","TopNavBar","App","register","setIsRegistered","isLoggedIn","setIsLoggedIn"],"sources":["/Users/andyyuen/IdeaProjects/financetracker/src/main/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SignIn from \"./components/login/SignIn.jsx\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AppContext } from \"./context\";\nimport LoginContainer from \"./components/login/LoginContainer.jsx\";\nimport TopNavBar from \"./components/navigation/TopNavBar.jsx\";\nfunction App() {\n  const [ register, setIsRegistered] = useState(false);\n  const [ isLoggedIn, setIsLoggedIn ] = useState(false);\n  return (\n    <>\n      <AppContext.Provider value={{register, setIsRegistered, isLoggedIn, setIsLoggedIn}}>\n        <LoginContainer />\n      </AppContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAO,sCAAP;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,SAAP,MAAsB,uCAAtB;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAAEC,QAAF,EAAYC,eAAZ,IAA+BP,QAAQ,CAAC,KAAD,CAA7C;EACA,MAAM,CAAEQ,UAAF,EAAcC,aAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;EACA,oBACE;IAAA,uBACE,QAAC,UAAD,CAAY,QAAZ;MAAqB,KAAK,EAAE;QAACM,QAAD;QAAWC,eAAX;QAA4BC,UAA5B;QAAwCC;MAAxC,CAA5B;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAOD;;GAVQJ,G;;KAAAA,G;AAYT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}